{
  "ars_properties" : {
    "tags" : [ "#launchable" ]
  },
  "controllers" : {
    "client" : { },
    "dataStream" : {
      "storeChanged" : {
        "onDataArrived" : "if ( data.productCount > client.data.productCount) {\n    alert(\"More products have arrived.\");\n}\nclient.data.productCount = data.productCount;"
      }
    },
    "page" : {
      "Start" : {
        "onClientStart" : "//find storeId from BurgerStore type\n//\n\n    //  Create an instance of the Http class to execute our server request\n    //\n    var http = new Http();\n\n    //\n    //  Build the URL needed to do a \"select\" on our Type\n    //\n    http.setVantiqUrlForResource(\"Store\");\n\n    //\n    //  Add the Authorization header to the request\n    //\n    http.setVantiqHeaders();\n\n    //\n    //  Specify the (optional) query parameters\n    //\n    var parameters2 = {\n       \n    };\n\n    //\n    //  Execute the asynchronous server request. This expects 3 parameters:\n    //\n    //  parameters: \"null\" or an object containing the parameters for this request\n    //  successCallback: A callback function that will be driven when the request completes\n    //                   successfully (i.e. a status code of 2XX)\n    //  failureCallback: A callback function that will be driven when the request does not complete\n    //                   successfully.\n    //\n    http.select(parameters2,function(response)\n    {\n        if (response.length > 0) {\n            client.data.storeId = response[0].storeId;\n            client.data.productCount = response[0].productCount;\n        }\n    },\n    function(errors)\n    {\n        //\n        //  This call will format the error into a popup dialog\n        //\n        client.showHttpErrors(errors,\"Doing a select on 'Store'\");\n    });",
        "widgets" : {
          "Button34" : {
            "onClick" : "    //\n    //  Create an instance of the Http class to execute our server request\n    //\n    var http = new Http();\n\n    //\n    //  Build the URL needed to do a \"select\" on our Type\n    //\n    http.setVantiqUrlForResource(\"Store\");\n    //\n    //  Add the Authorization header to the request\n    //\n    http.setVantiqHeaders();\n\n    //\n    //  Specify the (optional) query parameters\n    //\n    var queryParameters = {\n        \n    };\n\n    //\n    //  Execute the asynchronous server request. This expects 3 parameters:\n    //\n    //  queryParameters: \"null\" or an object containing the parameters for this request\n    //  successCallback: A callback function that will be driven when the request completes\n    //                   successfully (i.e. a status code of 2XX)\n    //  failureCallback: A callback function that will be driven when the request does not complete\n    //                   successfully.\n    //\n    http.select(queryParameters,function(response)\n    {\n        var currentCount = response[0].productCount;\n        //if (currentCount >= 1000) {\n        //    alert(\"Please refill only if there are less than 1000 burgers.\");\n        //    return;\n        //}\n        var newRecord = {};\n        newRecord.productCount = currentCount-1;\n        if (newRecord.productCount < 0) {\n            client.errorDialog(\"There is not enough products, waiting for distribution.\");\n            return;\n        }\n      \n        client.data.productCount = newRecord.productCount;\n        \n        http.update(newRecord, response[0]._id, function(response){\n            console.log(\"order product successfully.\");\n        }, function (errors) {\n            client.showHttpErrors(errors,\"Doing a update on 'Store'\");\n        });\n    },\n    function(errors)\n    {\n        //\n        //  This call will format the error into a popup dialog\n        //\n        client.showHttpErrors(errors,\"Doing a select on 'Store'\");\n    });"
          },
          "Button69" : {
            "onClick" : "    //\n    //  Create an instance of the Http class to execute our server request\n    //\n    var http = new Http();\n\n    //\n    //  Build the URL needed to do a \"select\" on our Type\n    //\n    http.setVantiqUrlForResource(\"Store\");\n    //\n    //  Add the Authorization header to the request\n    //\n    http.setVantiqHeaders();\n\n    //\n    //  Specify the (optional) query parameters\n    //\n    var queryParameters = {\n        \n    };\n\n    //\n    //  Execute the asynchronous server request. This expects 3 parameters:\n    //\n    //  queryParameters: \"null\" or an object containing the parameters for this request\n    //  successCallback: A callback function that will be driven when the request completes\n    //                   successfully (i.e. a status code of 2XX)\n    //  failureCallback: A callback function that will be driven when the request does not complete\n    //                   successfully.\n    //\n    http.select(queryParameters,function(response)\n    {\n        var currentCount = response[0].productCount;\n        //if (currentCount >= 1000) {\n        //    alert(\"Please refill only if there are less than 1000 burgers.\");\n        //    return;\n        //}\n        var newRecord = {};\n        newRecord.productCount = currentCount-10;\n        if (newRecord.productCount < 0) {\n            client.errorDialog(\"There is not enough products, waiting for distribution.\");\n            return;\n        }\n\n        client.data.burgerCount = newRecord.burgerCount;\n        \n        http.update(newRecord, response[0]._id, function(response){\n            console.log(\"order product successfully.\");\n        }, function (errors) {\n            client.showHttpErrors(errors,\"Doing a update on 'Store'\");\n        });\n    },\n    function(errors)\n    {\n        //\n        //  This call will format the error into a popup dialog\n        //\n        client.showHttpErrors(errors,\"Doing a select on 'Store'\");\n    });"
          }
        }
      },
      "page2" : {
        "widgets" : { }
      }
    }
  },
  "isLaunchable" : true,
  "models" : {
    "dataObjects" : {
      "__GLOBAL__" : {
        "properties" : {
          "productCount" : {
            "defaultLabel" : "Product Count",
            "type" : "Integer"
          },
          "storeId" : {
            "defaultLabel" : "Store Id",
            "type" : "String"
          }
        }
      },
      "__PARAMETERS__" : {
        "properties" : { }
      }
    },
    "dataStreams" : [ {
      "advancedWhereClause" : null,
      "dataObjectName" : null,
      "dataTypeList" : [ {
        "label" : null,
        "type" : "Store"
      } ],
      "isDeleteOp" : false,
      "isInsertOp" : false,
      "isUpdateOp" : true,
      "maxRecords" : 0,
      "name" : "storeChanged",
      "property" : null,
      "sortByProperty" : null,
      "sortDescending" : false,
      "type" : 1,
      "updateInterval" : 60,
      "uuid" : "c459b0d5-5d62-4f1b-80f2-e5cce9ff8b9e",
      "v" : 1
    } ]
  },
  "name" : "DeploymentClient",
  "options" : {
    "badgeCount" : 0,
    "description" : "",
    "isExpertMode" : true,
    "showGridWhileEditing" : false,
    "theme" : {
      "accentColor1" : "#040fdb",
      "backgroundColor" : "#f0f2f5",
      "borderColor" : "#000000",
      "foregroundColor" : "#000000",
      "label" : "Light",
      "name" : "light",
      "v" : 2
    },
    "v" : 3
  },
  "targetDevice" : "all",
  "userList" : [ ],
  "views" : {
    "Start" : {
      "bodyChildren" : [ {
        "CSSClass" : "vantiqStaticImage",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 0,
        "h" : 43,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "isDraggable" : true,
        "isScaleable" : false,
        "isSelectable" : true,
        "name" : "StaticImage2",
        "scale" : 1,
        "type" : "Img",
        "url" : "../cmn/assets/branding/defaultImage.png",
        "v" : 14,
        "vertGravity" : 4,
        "w" : 150,
        "widthPolicy" : 0,
        "x" : 115,
        "y" : 5
      }, {
        "CSSClass" : "vantiqStaticText",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 0,
        "fontFace" : "inherit",
        "fontSize" : 20,
        "fontStyle" : "normal",
        "fontWeight" : "normal",
        "h" : 25,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "isDraggable" : true,
        "isSelectable" : true,
        "name" : "StaticText205",
        "text" : "Store Order Terminal",
        "type" : "TextLabel",
        "v" : 14,
        "vertGravity" : 4,
        "w" : 174,
        "widthPolicy" : 0,
        "x" : 103,
        "y" : 53
      }, {
        "CSSClass" : "vantiqHorizontalLayout",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 2,
        "h" : 96,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "horzMargin" : 10,
        "innerMargin" : 20,
        "isDraggable" : true,
        "isSelectable" : true,
        "kids" : [ {
          "CSSClass" : "vantiqInputString",
          "actionMenuLabel" : null,
          "actionMenuTopic" : null,
          "binding" : "client.data.storeId",
          "borderColor" : "Default",
          "borderWidth" : 0,
          "default" : "",
          "h" : 72,
          "heightPolicy" : 0,
          "horzGravity" : 4,
          "horzMargin" : 10,
          "innerMargin" : 0,
          "isDraggable" : true,
          "isPassword" : false,
          "isSelectable" : true,
          "label" : "Store Id",
          "labelAlign" : "center",
          "labelColor" : "#000000",
          "labelFontSize" : 14,
          "labelStyle" : "plain",
          "name" : "InputString1",
          "optional" : true,
          "placeholder" : "",
          "type" : "PIInputString",
          "v" : 14,
          "vertGravity" : 4,
          "vertMargin" : 10,
          "w" : 163,
          "widthPolicy" : 2,
          "x" : 10,
          "y" : 10
        }, {
          "CSSClass" : "vantiqInputString",
          "actionMenuLabel" : null,
          "actionMenuTopic" : null,
          "binding" : "client.data.productCount",
          "borderColor" : "Default",
          "borderWidth" : 0,
          "default" : "",
          "h" : 72,
          "heightPolicy" : 0,
          "horzGravity" : 4,
          "horzMargin" : 10,
          "innerMargin" : 0,
          "isDraggable" : true,
          "isPassword" : false,
          "isSelectable" : true,
          "label" : "Products Count",
          "labelAlign" : "center",
          "labelColor" : "#000000",
          "labelFontSize" : 14,
          "labelStyle" : "plain",
          "name" : "InputString13",
          "optional" : true,
          "placeholder" : "",
          "type" : "PIInputString",
          "v" : 14,
          "vertGravity" : 4,
          "vertMargin" : 10,
          "w" : 163,
          "widthPolicy" : 2,
          "x" : 193,
          "y" : 10
        } ],
        "name" : "HorizontalLayout31",
        "type" : "HorizontalContainer",
        "v" : 14,
        "vertGravity" : 4,
        "vertMargin" : 10,
        "w" : 370,
        "widthPolicy" : 2,
        "x" : 5,
        "y" : 83
      }, {
        "CSSClass" : "vantiqButton",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 0,
        "buttonBackgroundColor" : "platform",
        "buttonLabel" : "Order 1",
        "buttonLabelColor" : "platform",
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "h" : 51,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "horzMargin" : 10,
        "innerMargin" : 0,
        "isDraggable" : true,
        "isSelectable" : true,
        "label" : "",
        "labelAlign" : "center",
        "labelColor" : "#000000",
        "labelFontSize" : 14,
        "labelStyle" : "plain",
        "name" : "Button34",
        "type" : "PIInlineButton",
        "v" : 14,
        "value" : 100,
        "vertGravity" : 4,
        "vertMargin" : 10,
        "w" : 370,
        "widthPolicy" : 2,
        "x" : 5,
        "y" : 184
      }, {
        "CSSClass" : "vantiqButton",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 0,
        "buttonBackgroundColor" : "platform",
        "buttonLabel" : "Order 10",
        "buttonLabelColor" : "platform",
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "h" : 51,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "horzMargin" : 10,
        "innerMargin" : 0,
        "isDraggable" : true,
        "isSelectable" : true,
        "label" : "",
        "labelAlign" : "center",
        "labelColor" : "#000000",
        "labelFontSize" : 14,
        "labelStyle" : "plain",
        "name" : "Button69",
        "type" : "PIInlineButton",
        "v" : 14,
        "value" : 100,
        "vertGravity" : 4,
        "vertMargin" : 10,
        "w" : 370,
        "widthPolicy" : 2,
        "x" : 5,
        "y" : 240
      } ],
      "data" : {
        "properties" : { }
      },
      "fields" : [ ],
      "footerChildren" : [ ],
      "layoutType" : "mobile",
      "responseTopic" : "/my/response/topic"
    },
    "page2" : {
      "bodyChildren" : [ {
        "CSSClass" : "vantiqStaticText",
        "actionMenuLabel" : null,
        "actionMenuTopic" : null,
        "borderColor" : "Default",
        "borderWidth" : 0,
        "fontFace" : "inherit",
        "fontSize" : 20,
        "fontStyle" : "normal",
        "fontWeight" : "normal",
        "h" : 25,
        "heightPolicy" : 0,
        "horzGravity" : 4,
        "isDraggable" : true,
        "isSelectable" : true,
        "name" : "StaticText209",
        "text" : "page2",
        "type" : "TextLabel",
        "v" : 14,
        "vertGravity" : 4,
        "w" : 51,
        "widthPolicy" : 0,
        "x" : 135,
        "y" : 39
      } ],
      "data" : {
        "properties" : {
          "page2Prop" : {
            "defaultLabel" : "abc",
            "type" : "String"
          }
        }
      },
      "fields" : [ ],
      "footerChildren" : [ ],
      "layoutType" : "browser",
      "responseTopic" : ""
    }
  }
}